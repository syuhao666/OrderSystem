{
  "name": "My workflow 3",
  "nodes": [
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import hashlib\nimport urllib.parse\nfrom datetime import datetime\n\ndef encode_special_url(s):\n    encoded = urllib.parse.quote(s, safe='').lower()\n    encoded = (encoded\n        .replace('%20', '+')\n        .replace('%21', '!')\n        .replace('%28', '(')\n        .replace('%29', ')')\n        .replace('%2a', '*'))\n    return encoded\n\n# ✅ 商店資訊\nhash_key = 'pwFHCqoQZGmho4w6'\nhash_iv = 'EkRm7iFT261dpevs'\nmerchant_id = '3002607'\n\n# ✅ 模擬輸入資料（從前節點拿）\nbody = items[0]['json']['body']\nnow = datetime.now()\nmerchant_trade_date = now.strftime('%Y/%m/%d %H:%M:%S')\norder_id = 'TEST' + str(int(now.timestamp() * 1000))\ntotal_amount = 1000\nitem_names = '#'.join(item['name'] for item in body['items'])\n\n# ✅ 組參數\nparams = {\n    'MerchantID': merchant_id,\n    'MerchantTradeNo': order_id,\n    'MerchantTradeDate': merchant_trade_date,\n    'PaymentType': 'aio',\n    'TotalAmount': str(total_amount),\n    'TradeDesc': '訂單測試',\n    'ItemName': item_names,\n    'ReturnURL': 'https://accurately-enhanced-raven.ngrok-free.app/webhook/ecpay-callback',\n    'ChoosePayment': 'WebATM',\n    'ClientBackURL': 'http://localhost:8080/success.html',\n    'EncryptType': '1',\n}\n\n# ✅ 排序組合字串\nsorted_keys = sorted(params)\nraw_query = '&'.join(f'{key}={params[key]}' for key in sorted_keys)\nraw_string = f'HashKey={hash_key}&{raw_query}&HashIV={hash_iv}'\nencoded_string = encode_special_url(raw_string)\n\n# ✅ 計算 CheckMacValue（SHA256）\ncheck_mac_value = hashlib.sha256(encoded_string.encode('utf-8')).hexdigest().upper()\nparams['CheckMacValue'] = check_mac_value\n\n# ✅ 回傳給下一個節點\nreturn [{ 'json': params }]\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -992,
        -576
      ],
      "id": "bc88034b-1178-4813-9dc3-a05aa3f2397b",
      "name": "Code"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{$node[\"Code3\"].json[\"html\"]}}",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/html"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -560,
        -576
      ],
      "id": "74c1bcf9-f330-4e1d-9357-b0b8a361bee0",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ecpay/dd",
        "responseMode": "responseNode",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "POST, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type"
              }
            ]
          }
        }
      },
      "id": "7c9d2614-a12e-4040-b8f6-353ac912b844",
      "name": "Webhook - 接前端送來的資料",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1200,
        -576
      ],
      "webhookId": "ecpay-payment-webhook"
    },
    {
      "parameters": {
        "jsCode": "const data = $json; // 這裡拿到剛剛 code 節點回傳的物件\n\nconst html = `\n<html>\n  <body>\n    <form id=\"ecpayForm\" method=\"post\" action=\"https://payment-stage.ecpay.com.tw/Cashier/AioCheckOut/V5\">\n      <input type=\"hidden\" name=\"MerchantID\" value=\"${data.MerchantID}\" />\n      <input type=\"hidden\" name=\"MerchantTradeNo\" value=\"${data.MerchantTradeNo}\" />\n      <input type=\"hidden\" name=\"MerchantTradeDate\" value=\"${data.MerchantTradeDate}\" />\n      <input type=\"hidden\" name=\"PaymentType\" value=\"${data.PaymentType}\" />\n      <input type=\"hidden\" name=\"TotalAmount\" value=\"${data.TotalAmount}\" />\n      <input type=\"hidden\" name=\"TradeDesc\" value=\"${data.TradeDesc}\" />\n      <input type=\"hidden\" name=\"ItemName\" value=\"${data.ItemName}\" />\n      <input type=\"hidden\" name=\"ReturnURL\" value=\"${data.ReturnURL}\" />\n      <input type=\"hidden\" name=\"ChoosePayment\" value=\"${data.ChoosePayment}\" />\n      <input type=\"hidden\" name=\"ClientBackURL\" value=\"${data.ClientBackURL}\" />\n      <input type=\"hidden\" name=\"EncryptType\" value=\"${data.EncryptType}\" />\n      <input type=\"hidden\" name=\"CheckMacValue\" value=\"${data.CheckMacValue}\" />\n    </form>\n    <script>document.getElementById('ecpayForm').submit();</script>\n  </body>\n</html>\n`;\n\nreturn [{ json: { html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -784,
        -576
      ],
      "id": "f55909ee-e16c-47f2-9f2f-931897125a7d",
      "name": "Code3"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "1|OK",
        "options": {}
      },
      "name": "Respond to ECPay",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -736,
        -144
      ],
      "id": "7a433132-315e-4420-8515-18f0735f99be"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ecpay-callback",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "Webhook2",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1152,
        -144
      ],
      "id": "7e0a582c-adf1-4e7f-a87d-9b1cb9dff992",
      "webhookId": "727ff429-0377-431c-bc14-bc05c962b5ad"
    },
    {
      "parameters": {
        "jsCode": "// --- 綠界專用 URL encode 規則 ---\nfunction ecpayUrlEncode(str) {\n  return encodeURIComponent(str)\n    .replace(/%20/g, '+')\n    .replace(/%21/g, '!')\n    .replace(/%28/g, '(')\n    .replace(/%29/g, ')')\n    .replace(/%2a/gi, '*')\n    .toLowerCase();\n}\n\n// --- SHA256 純 JS 實作 ---\nfunction sha256(ascii) {\n  function rightRotate(value, amount) {\n    return (value >>> amount) | (value << (32 - amount));\n  }\n  var mathPow = Math.pow;\n  var maxWord = mathPow(2, 32);\n  var lengthProperty = \"length\";\n  var i, j;\n  var result = \"\";\n\n  var words = [];\n  var asciiBitLength = ascii[lengthProperty] * 8;\n\n  var hash = [], k = [];\n  var primeCounter = 0;\n\n  var isComposite = {};\n  for (var candidate = 2; primeCounter < 64; candidate++) {\n    if (!isComposite[candidate]) {\n      for (i = 0; i < 313; i += candidate) {\n        isComposite[i] = candidate;\n      }\n      hash[primeCounter] = (mathPow(candidate, 0.5) * maxWord) | 0;\n      k[primeCounter++] = (mathPow(candidate, 1 / 3) * maxWord) | 0;\n    }\n  }\n\n  ascii += \"\\x80\";\n  while (ascii[lengthProperty] % 64 - 56) ascii += \"\\x00\";\n  for (i = 0; i < ascii[lengthProperty]; i++) {\n    j = ascii.charCodeAt(i);\n    if (j >> 8) return;\n    words[i >> 2] |= j << ((3 - i) % 4) * 8;\n  }\n  words[words[lengthProperty]] = (asciiBitLength / maxWord) | 0;\n  words[words[lengthProperty]] = asciiBitLength;\n\n  for (j = 0; j < words[lengthProperty];) {\n    var w = words.slice(j, (j += 16));\n    var oldHash = hash.slice(0);\n    for (i = 16; i < 64; i++) {\n      var s0 =\n        rightRotate(w[i - 15], 7) ^\n        rightRotate(w[i - 15], 18) ^\n        (w[i - 15] >>> 3);\n      var s1 =\n        rightRotate(w[i - 2], 17) ^\n        rightRotate(w[i - 2], 19) ^\n        (w[i - 2] >>> 10);\n      w[i] = (w[i - 16] + s0 + w[i - 7] + s1) | 0;\n    }\n    for (i = 0; i < 64; i++) {\n      var s1 =\n        rightRotate(hash[4], 6) ^\n        rightRotate(hash[4], 11) ^\n        rightRotate(hash[4], 25);\n      var ch = (hash[4] & hash[5]) ^ (~hash[4] & hash[6]);\n      var temp1 = (hash[7] + s1 + ch + k[i] + w[i]) | 0;\n      var s0 =\n        rightRotate(hash[0], 2) ^\n        rightRotate(hash[0], 13) ^\n        rightRotate(hash[0], 22);\n      var maj = (hash[0] & hash[1]) ^ (hash[0] & hash[2]) ^ (hash[1] & hash[2]);\n      var temp2 = (s0 + maj) | 0;\n\n      hash[7] = hash[6];\n      hash[6] = hash[5];\n      hash[5] = hash[4];\n      hash[4] = (hash[3] + temp1) | 0;\n      hash[3] = hash[2];\n      hash[2] = hash[1];\n      hash[1] = hash[0];\n      hash[0] = (temp1 + temp2) | 0;\n    }\n    for (i = 0; i < 8; i++) {\n      hash[i] = (hash[i] + oldHash[i]) | 0;\n    }\n  }\n  for (i = 0; i < 8; i++) {\n    for (j = 3; j + 1; j--) {\n      var b = (hash[i] >> (j * 8)) & 255;\n      result += (b < 16 ? \"0\" : \"\") + b.toString(16);\n    }\n  }\n  return result;\n}\n\n// --- 主驗證流程 ---\nconst hashKey = 'pwFHCqoQZGmho4w6';\nconst hashIV = 'EkRm7iFT261dpevs';\n\n// 取 body 參數\nlet params = $input.first().json.body;\n\n// 取出 CheckMacValue 並刪除\nconst receivedCheckMacValue = params.CheckMacValue;\ndelete params.CheckMacValue;\n\nif (!receivedCheckMacValue) {\n  throw new Error(\"缺少 CheckMacValue\");\n}\n\n// Key 升冪排序\nconst sortedKeys = Object.keys(params).sort();\nconst sortedParams = {};\nfor (const key of sortedKeys) {\n  sortedParams[key] = params[key];\n}\n\n// 組成 query 字串 (k=v&k2=v2...)\nlet queryStr = \"\";\nfor (const [k, v] of Object.entries(sortedParams)) {\n  queryStr += `${k}=${v}&`;\n}\n\n// 包 HashKey 與 HashIV\nlet rawStr = `HashKey=${hashKey}&${queryStr}HashIV=${hashIV}`;\n\n// 綠界特別的 URL encode 規則\nrawStr = ecpayUrlEncode(rawStr);\n\n// 計算 SHA256 並轉大寫\nconst calculatedCheckMacValue = sha256(rawStr).toUpperCase();\n\n// 回傳結果\nreturn [{\n  json: {\n    receivedCheckMacValue,\n    calculatedCheckMacValue,\n    verified: receivedCheckMacValue === calculatedCheckMacValue,\n    params: sortedParams,\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -944,
        -144
      ],
      "id": "3c15d6ff-6603-4b99-93fb-f1c7c5b7d8e2",
      "name": "Code4"
    },
    {
      "parameters": {
        "jsCode": "// ✅ n8n Code 節點（JavaScript）— 綠界 CheckMacValue 驗簽（純 JS SHA256）\n\n// --- ECPay 測試金鑰（官方測試環境，大家都一樣） ---\nconst hashKey = \"pwFHCqoQZGmho4w6\";\nconst hashIV = \"EkRm7iFT261dpevs\";\n\n// --- 取 Webhook 傳入資料（n8n Webhook 會把 form 放在 $json.body） ---\nconst raw = $json?.body ?? $json;\nif (!raw) throw new Error(\"沒有拿到 webhook body\");\n\n// --- 取出並移除 CheckMacValue ---\nconst receivedCheckMacValue = raw.CheckMacValue;\nif (!receivedCheckMacValue) throw new Error(\"缺少 CheckMacValue\");\nconst params = { ...raw };\ndelete params.CheckMacValue;\n\n// --- 全部轉字串，避免型別差異 ---\nfor (const k of Object.keys(params)) params[k] = String(params[k] ?? \"\");\n\n// --- key 不分大小寫升冪排序 ---\nconst keys = Object.keys(params).sort((a, b) =>\n  a.localeCompare(b, \"en\", { sensitivity: \"base\" })\n);\n\n// --- 綠界專用 URL encode 規則 ---\nfunction ecpayUrlEncode(str) {\n  return encodeURIComponent(str)\n    .replace(/%20/g, \"+\")\n    .replace(/%21/g, \"!\")\n    .replace(/%28/g, \"(\")\n    .replace(/%29/g, \")\")\n    .replace(/%2a/gi, \"*\")\n    .replace(/%2d/gi, \"-\")\n    .replace(/%5f/gi, \"_\")\n    .replace(/%2e/gi, \".\");\n}\n\n// --- 純 JS 實作 SHA256（不需要 require） ---\nfunction sha256(ascii) {\n  function rightRotate(value, amount) {\n    return (value >>> amount) | (value << (32 - amount));\n  }\n  var mathPow = Math.pow,\n    maxWord = mathPow(2, 32),\n    lengthProperty = \"length\",\n    i,\n    j,\n    result = \"\";\n  var words = [],\n    asciiBitLength = ascii[lengthProperty] * 8,\n    hash = [],\n    k = [],\n    primeCounter = 0;\n  var isComposite = {};\n  for (var candidate = 2; primeCounter < 64; candidate++) {\n    if (!isComposite[candidate]) {\n      for (i = 0; i < 313; i += candidate) isComposite[i] = candidate;\n      hash[primeCounter] = (mathPow(candidate, 0.5) * maxWord) | 0;\n      k[primeCounter++] = (mathPow(candidate, 1 / 3) * maxWord) | 0;\n    }\n  }\n  ascii += \"\\x80\";\n  while ((ascii[lengthProperty] % 64) - 56) ascii += \"\\x00\";\n  for (i = 0; i < ascii[lengthProperty]; i++) {\n    j = ascii.charCodeAt(i);\n    if (j >> 8) return;\n    words[i >> 2] |= j << (((3 - i) % 4) * 8);\n  }\n  words[words[lengthProperty]] = (asciiBitLength / maxWord) | 0;\n  words[words[lengthProperty]] = asciiBitLength;\n  for (j = 0; j < words[lengthProperty]; ) {\n    var w = words.slice(j, (j += 16)),\n      oldHash = hash.slice(0);\n    for (i = 16; i < 64; i++) {\n      var s0 =\n        rightRotate(w[i - 15], 7) ^\n        rightRotate(w[i - 15], 18) ^\n        (w[i - 15] >>> 3);\n      var s1 =\n        rightRotate(w[i - 2], 17) ^\n        rightRotate(w[i - 2], 19) ^\n        (w[i - 2] >>> 10);\n      w[i] = (w[i - 16] + s0 + w[i - 7] + s1) | 0;\n    }\n    for (i = 0; i < 64; i++) {\n      var s1 =\n        rightRotate(hash[4], 6) ^\n        rightRotate(hash[4], 11) ^\n        rightRotate(hash[4], 25);\n      var ch = (hash[4] & hash[5]) ^ (~hash[4] & hash[6]);\n      var temp1 = (hash[7] + s1 + ch + k[i] + w[i]) | 0;\n      var s0 =\n        rightRotate(hash[0], 2) ^\n        rightRotate(hash[0], 13) ^\n        rightRotate(hash[0], 22);\n      var maj = (hash[0] & hash[1]) ^ (hash[0] & hash[2]) ^ (hash[1] & hash[2]);\n      var temp2 = (s0 + maj) | 0;\n      hash[7] = hash[6];\n      hash[6] = hash[5];\n      hash[5] = hash[4];\n      hash[4] = (hash[3] + temp1) | 0;\n      hash[3] = hash[2];\n      hash[2] = hash[1];\n      hash[1] = hash[0];\n      hash[0] = (temp1 + temp2) | 0;\n    }\n    for (i = 0; i < 8; i++) hash[i] = (hash[i] + oldHash[i]) | 0;\n  }\n  for (i = 0; i < 8; i++)\n    for (j = 3; j + 1; j--) {\n      var b = (hash[i] >> (j * 8)) & 255;\n      result += (b < 16 ? \"0\" : \"\") + b.toString(16);\n    }\n  return result;\n}\n\n// --- 組簽名字串：HashKey=...&k=v&...&HashIV=... ---\nconst rawStr =\n  `HashKey=${hashKey}&` +\n  keys.map((k) => `${k}=${params[k]}`).join(\"&\") +\n  `&HashIV=${hashIV}`;\n\n// --- encode → 小寫 → SHA256 → 大寫 ---\nconst encodedLower = ecpayUrlEncode(rawStr).toLowerCase();\nconst calculatedCheckMacValue = sha256(encodedLower).toUpperCase();\n\n// --- 比對結果 ---\nconst verified = receivedCheckMacValue === calculatedCheckMacValue;\n\n// --- 回傳（給下一節點用） ---\nreturn [\n  {\n    json: {\n      verified,\n      receivedCheckMacValue,\n      calculatedCheckMacValue,\n      paramsSorted: Object.fromEntries(keys.map((k) => [k, params[k]])),\n      original: raw,\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1680,
        -464
      ],
      "id": "8cae8a1b-beeb-41c7-a9bd-215d026aecf5",
      "name": "Code1",
      "disabled": true
    },
    {
      "parameters": {
        "keys": {
          "key": [
            {
              "currentKey": "orderId",
              "newKey": "id"
            }
          ]
        },
        "additionalOptions": {}
      },
      "type": "n8n-nodes-base.renameKeys",
      "typeVersion": 1,
      "position": [
        -176,
        -640
      ],
      "id": "b3bf924c-e51b-4b1e-b0f1-c305cbc1dbc2",
      "name": "Rename Keys"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "24c89197-9efa-4b82-9448-f7951c0872e9",
              "name": "orderId",
              "value": "={{ $('Webhook - 接前端送來的資料').item.json.body.orderId }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -336,
        -640
      ],
      "id": "1e22126e-74c7-49e5-bfa2-c728501a93bf",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d6d45a7d-0d71-4134-aad0-1633547c6816",
              "name": "MerchantTradeNO",
              "value": "={{ $('Code').item.json.MerchantTradeNo }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -336,
        -496
      ],
      "id": "3669f4c9-3814-4efc-88f6-05029102cf02",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "mode": "combineBySql",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -16,
        -560
      ],
      "id": "8678bb16-8620-48df-9c1d-897a0e5615d3",
      "name": "Merge"
    },
    {
      "parameters": {
        "keys": {
          "key": [
            {
              "currentKey": "MerchantTradeNO",
              "newKey": "merchant_trade_no"
            }
          ]
        },
        "additionalOptions": {}
      },
      "type": "n8n-nodes-base.renameKeys",
      "typeVersion": 1,
      "position": [
        -176,
        -496
      ],
      "id": "77a797e9-14be-4ca8-864f-05d4fbf08c04",
      "name": "Rename Keys1"
    },
    {
      "parameters": {
        "operation": "update",
        "table": {
          "__rl": true,
          "value": "orders",
          "mode": "list",
          "cachedResultName": "orders"
        },
        "dataMode": "defineBelow",
        "columnToMatchOn": "=id",
        "valueToMatchOn": "={{ $json.id }}",
        "valuesToSend": {
          "values": [
            {
              "column": "merchant_trade_no",
              "value": "={{ $json.merchant_trade_no }}"
            },
            {
              "column": "status",
              "value": "未付款"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        144,
        -560
      ],
      "id": "7d94c6fa-b787-4b1e-b3c7-b5d7e3dbfbe5",
      "name": "Update rows in a table",
      "credentials": {
        "mySql": {
          "id": "hLFGgttkZMqnumqq",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d6d45a7d-0d71-4134-aad0-1633547c6816",
              "name": "MerchantTradeNO",
              "value": "={{ $json.params.MerchantTradeNo }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -512,
        -144
      ],
      "id": "2f741a5e-ef4c-4b87-a082-a041686d61b0",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "keys": {
          "key": [
            {
              "currentKey": "MerchantTradeNO",
              "newKey": "merchant_trade_no"
            }
          ]
        },
        "additionalOptions": {}
      },
      "type": "n8n-nodes-base.renameKeys",
      "typeVersion": 1,
      "position": [
        -288,
        -144
      ],
      "id": "4ee1c998-b5aa-432e-b41c-adef381355de",
      "name": "Rename Keys2"
    },
    {
      "parameters": {
        "operation": "update",
        "table": {
          "__rl": true,
          "value": "orders",
          "mode": "list",
          "cachedResultName": "orders"
        },
        "dataMode": "defineBelow",
        "columnToMatchOn": "=merchant_trade_no",
        "valueToMatchOn": "={{ $json.merchant_trade_no }}",
        "valuesToSend": {
          "values": [
            {
              "column": "status",
              "value": "=已付款"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -80,
        -144
      ],
      "id": "97f75ce5-3df0-4bdb-bb3a-596d912f6bfd",
      "name": "Update rows in a table1",
      "credentials": {
        "mySql": {
          "id": "hLFGgttkZMqnumqq",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "content": "# 綠界回調",
        "height": 320,
        "width": 1760,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1344,
        -240
      ],
      "typeVersion": 1,
      "id": "a46097cb-a3e1-4883-a8cd-63c629790c90",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# 後端API發送綠界",
        "height": 384,
        "width": 1760,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1344,
        -688
      ],
      "typeVersion": 1,
      "id": "98e5d726-2662-467c-abe5-46f971b052cb",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        528,
        480
      ],
      "id": "ab6723d2-248a-4d66-a973-0e9b26c3a153",
      "name": "Send a message",
      "webhookId": "b8b70b51-7eb1-4aef-9cbf-caf84b79f7ca",
      "credentials": {
        "gmailOAuth2": {
          "id": "j0EnjJ79eG8o8zM2",
          "name": "Gmail account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "path": "google",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1264,
        256
      ],
      "id": "fa1b296d-e4a0-44c5-9c8f-588bf17f4b82",
      "name": "Webhook",
      "webhookId": "64f534e8-3f56-486c-84df-54da8d1844b9"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -720,
        256
      ],
      "id": "9c852259-f06b-4546-a0d3-22eefabe2e76",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://oauth2.googleapis.com/token",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "code",
              "value": "={{ $json.query.code }}"
            },
            {
              "name": "client_id",
              "value": "1097626042096-kvaim9a40uijmsst8o8cejqm5eufq1qm.apps.googleusercontent.com"
            },
            {
              "name": "client_secret",
              "value": "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"
            },
            {
              "name": "redirect_uri",
              "value": "={{ $json.webhookUrl }}"
            },
            {
              "name": "grant_type",
              "value": "authorization_code"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1056,
        256
      ],
      "id": "5ea4f559-76d5-4c46-8eee-e51c4d16993a",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/oauth2/v3/userinfo",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.access_token }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -880,
        256
      ],
      "id": "bd7ea532-c557-4991-94a4-2e93f99dd6b6",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "content": "# google登入\n\n",
        "height": 288,
        "width": 1056,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1392,
        192
      ],
      "typeVersion": 1,
      "id": "811194af-8723-4eae-89cf-1245e5fdc8fe",
      "name": "Sticky Note2"
    }
  ],
  "pinData": {
    "Webhook - 接前端送來的資料": [
      {
        "json": {
          "headers": {
            "host": "accurately-enhanced-raven.ngrok-free.app",
            "user-agent": "Java/21.0.7",
            "transfer-encoding": "chunked",
            "accept": "text/plain, application/json, application/*+json, */*",
            "accept-encoding": "gzip",
            "content-type": "application/json",
            "x-forwarded-for": "172.19.0.5",
            "x-forwarded-host": "accurately-enhanced-raven.ngrok-free.app",
            "x-forwarded-port": "80",
            "x-forwarded-proto": "http",
            "x-forwarded-server": "fc38f080f17b",
            "x-real-ip": "172.19.0.5"
          },
          "params": {},
          "query": {},
          "body": {
            "totalAmount": 50,
            "orderId": 17,
            "name": "hwgtwet",
            "items": [
              {
                "productId": 3,
                "name": "床",
                "price": 50,
                "quantity": 1
              }
            ]
          },
          "webhookUrl": "https://accurately-enhanced-raven.ngrok-free.app/webhook/ecpay/dd",
          "executionMode": "production"
        }
      }
    ],
    "Webhook2": [
      {
        "json": {
          "headers": {
            "host": "accurately-enhanced-raven.ngrok-free.app",
            "user-agent": "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.0)",
            "content-length": "393",
            "accept": "text/html",
            "accept-encoding": "gzip",
            "content-type": "application/x-www-form-urlencoded",
            "expect": "100-continue",
            "referer": "http://ecpay.com.tw",
            "x-forwarded-for": "172.19.0.5",
            "x-forwarded-host": "accurately-enhanced-raven.ngrok-free.app",
            "x-forwarded-port": "80",
            "x-forwarded-proto": "http",
            "x-forwarded-server": "fc38f080f17b",
            "x-real-ip": "172.19.0.5"
          },
          "params": {},
          "query": {},
          "body": {
            "CustomField1": "",
            "CustomField2": "",
            "CustomField3": "",
            "CustomField4": "",
            "MerchantID": "3002607",
            "MerchantTradeNo": "TEST1754999760195",
            "PaymentDate": "2025/08/12 19:56:42",
            "PaymentType": "WebATM_TAISHIN",
            "PaymentTypeChargeFee": "10",
            "RtnCode": "1",
            "RtnMsg": "交易成功",
            "SimulatePaid": "0",
            "StoreID": "",
            "TradeAmt": "1000",
            "TradeDate": "2025/08/12 19:55:42",
            "TradeNo": "2508121955423914",
            "CheckMacValue": "1CBAA0E7931B2AA63A6F0674C5A9532FA25CC7F518FA6018E6C2FFD2FE2FABD8"
          },
          "webhookUrl": "https://accurately-enhanced-raven.ngrok-free.app/webhook/ecpay-callback",
          "executionMode": "production"
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "accurately-enhanced-raven.ngrok-free.app",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "zh-TW,zh;q=0.9",
            "cookie": "abuse_interstitial=accurately-enhanced-raven.ngrok-free.app; rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX185jGPdQigEH%2BJnnWn1WC8iJH8X2wYPjKA%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX19ohNr1QjM86DHNd1FNqrrH9qXFpR9hsws%3D; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX19VXnj1aoMTYl8IK13hyKo4gZ3DPZzykALwYLevJ7HFwJvek0X0eSKF2w6uWcJ%2BB%2FllqLTRcutxFg%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX1817ySFoNiopzWhVXZL6Om%2FPFHJbblQUaJgCp2sBaU9enc%2F8dVkiD5n7kqhOztA6OomzcCd3tGMVkPgy%2B2IGq4zI1%2Bl1LfDwMO0iNIro88b17iE3CmpCO1IJgSXmdYNgurg%2Bea2kCZgpAvrjkQWvXlGzy8jJ2fYaDU%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX19iywKzUzOPTgP%2BJgxKikqiSkRqQBYR%2Fj1ldlwU6eL46WwZjAcEq6UgX%2BPoiwJSJUoPAQNeQUEzL3tToFVqtsOFOElFjH%2F%2Fj7Vvp9MaxPuW%2Fz1J5oDv7dDVk34vdTQ2PfvG4Xnu2QlSVQ%3D%3D; rl_session=RudderEncrypt%3AU2FsdGVkX1%2FLL4onTGwYKY3M99POkD9TaOZ9phJ%2FuTowYqwT6BxG2Xe3yUIBkIeNYpK5A2BwtXxroTPRO4zW7sOdb8ZlPt%2BRXzoa9ve9FU9eyNuOhqfGCE%2B7vxQHW6PypTAnekyFh%2B9SWsNUotK%2FiQ%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22fb615004c52754fa669b457fae6cd1933458d7da26c759b0bf99824610a39676%23effd337c-0934-416d-8e86-ff3f0d406ff8%22%2C%22%24sesid%22%3A%5B1755168207846%2C%220198a82d-73e7-782c-acf4-8bbfb0d456de%22%2C1755168207846%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Faccurately-enhanced-raven.ngrok-free.app%2Fsignin%3Fredirect%3D%25252F%22%7D%7D",
            "priority": "u=0, i",
            "referer": "https://accounts.google.com/",
            "sec-ch-ua": "\"Not;A=Brand\";v=\"99\", \"Brave\";v=\"139\", \"Chromium\";v=\"139\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "sec-fetch-dest": "document",
            "sec-fetch-mode": "navigate",
            "sec-fetch-site": "cross-site",
            "sec-fetch-user": "?1",
            "sec-gpc": "1",
            "upgrade-insecure-requests": "1",
            "x-forwarded-for": "172.19.0.4",
            "x-forwarded-host": "accurately-enhanced-raven.ngrok-free.app",
            "x-forwarded-port": "80",
            "x-forwarded-proto": "http",
            "x-forwarded-server": "fc38f080f17b",
            "x-real-ip": "172.19.0.4"
          },
          "params": {},
          "query": {
            "code": "4/0AVMBsJgZNX4JbGVNEtZyVzzlbgv1SYmIxaxVWJlpGP39m0zIPMfF7Qhfy_vlzHE5j92IEA",
            "scope": "email profile https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email openid",
            "authuser": "1",
            "prompt": "consent"
          },
          "body": {},
          "webhookUrl": "https://accurately-enhanced-raven.ngrok-free.app/webhook/google",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook - 接前端送來的資料": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Respond to ECPay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        []
      ]
    },
    "Rename Keys": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Rename Keys",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Rename Keys1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Update rows in a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rename Keys1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Update rows in a table": {
      "main": [
        []
      ]
    },
    "Respond to ECPay": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Rename Keys2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rename Keys2": {
      "main": [
        [
          {
            "node": "Update rows in a table1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update rows in a table1": {
      "main": [
        []
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook1": {
      "main": [
        []
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "59fa8aa3-3874-4923-8b24-3b58543298e4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fb615004c52754fa669b457fae6cd1933458d7da26c759b0bf99824610a39676"
  },
  "id": "zvRJGAfuzf1sTYry",
  "tags": []
}